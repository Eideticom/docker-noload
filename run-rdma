#!/bin/bash
#
# (c) Stephen Bates, Eideticom 2017
#
# run-rdma
#
# Setup and run a docker image which can perform RDMA operations. This
# script checks a bunch of things on the host machine related to
# device nodes and kernel modules before executing the docker run
# command.

  # Command line variables

LABEL=${LABEL:-rdma}
TAG=${TAG:-latest}
BROADCOM=${BROADCOM:-yes}
CAVIUM=${CAVIUM:-yes}
MELLANOX=${MELLANOX:-yes}
SWITCHTEC=${SWITCHTEC:-yes}
CFG=${CFG:-/sys/kernel/config}

  # Build list of necessary kernel modules

MODULES=(ib_uverbs \
	     rdma_ucm \
	     configfs \
	     nvmet \
	     nvme \
	     nvme_fabrics \
	     nvmet_rdma \
	     nvme_rdma)

if [ $BROADCOM == "yes" ]; then
    MODULES+=(bnxt bnxt_re)
fi
if [ $CAVIUM == "yes" ]; then
    MODULES+=(qed qede qedr)
fi
if [ $MELLANOX == "yes" ]; then
    MODULES+=(mlx5_core mlx5_ib)
fi
if [ $SWITCHTEC == "yes" ]; then
    MODULES+=(switchtec)
fi

  # Check to make sure the appropriate kernel modules are
  # installed. If not inform the user and exit.

function modcheck {
    local MODFOUND=0

    if [[ $1 == "ib_uverbs" && -d /sys/class/infiniband_verbs ]]; then
        MODFOUND=1
    fi

    if [[ $1 == "rdma_ucm" && -d /sys/class/infiniband_cm ]]; then
        MODFOUND=1
    fi

    if [[ $MODFOUND || -d /sys/module/$1 ]]; then
	echo "$MODULE is loaded!"
    else
	echo "$MODULE is not loaded! Please load and re-run!"
	exit 1
    fi
}

for MODULE in ${MODULES[@]}; do
    modcheck $MODULE
done

# Ensure that configfs is mounted at the desired location. If not we
# mount it. It appears that doing this inside the container can cause
# issues with symbolic links.

if [ $(mount | grep -c $CFG) != 1 ]; then
    echo "Mount configfs at ${CFG} as root and re-run."
    exit 1
fi

# Now start the contain running. We do this in detached mode and we
# can then either reattach to it or ssh in to it to continue working
# with it.

if [ $TAG != "none" ]; then
    LABEL+=":$TAG"
fi
echo "Spinning up $LABEL..."

docker run \
       --privileged \
       --cap-add=ALL \
       -v /lib/modules:/lib/modules \
       -v /dev:/dev \
       -v /sys:/sys \
       --net=host \
       -it $LABEL
